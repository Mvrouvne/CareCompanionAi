services:
  database:
    container_name: carecompanion_database
    image: postgres:15
    env_file:
      - ./.env
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./database/data:/var/lib/postgresql/data
    networks:
      - carecompanion_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: carecompanion_backend
    image: carecompanion_backend
    build:
      context: . # to include pipfiles that are in the parent directory
      dockerfile: backend/Dockerfile
    ports:
      - 8000:8000
    env_file: 
      - .env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/CareCompanion/backend/
    networks:
      - carecompanion_network
    healthcheck:
      test: ["CMD-SHELL", "echo", "BACKEND"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  frontend:
    container_name: carecompanion_frontend
    image: carecompanion_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    env_file: 
      - .env
    depends_on:
      database:
        condition: service_healthy
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/frontend
    networks:
      - carecompanion_network

  flowise:
    container_name: flowise
    image: flowise
    build: ./flowise
    ports:
      - 3000:3000
    networks:
      - carecompanion_network
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./flowise:/flowise/

  redis:
    container_name: carecompanion_redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - carecompanion_network
    depends_on:
      - backend

networks:
  carecompanion_network:
    driver: bridge